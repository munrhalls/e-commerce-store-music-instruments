Tests should be simplest possible gps for auto-identify & auto-locate an issue.

THE POINT IS: AN ISSUE CAN'T AVOID BEING EASY TO IDENTIFY AND FIND - and it's accomplished with absolutely minimal amount of tests possible. 

The keyword is "easy" to find.

- EXCLUDE THE POSSIBILITY OF HUGE TIME-WASTE ON LOOKING FOR WHERE THE ISSUE STARTS. 
- HAVE AS FEW TESTS AS POSSIBLE, WHILE STILL MAXIMIZING CHANCES OF NEVER HAVING TO WASTE TIME ON LOOKING FOR *WHERE* THE ISSUE STARTS


THE POINT IS NOT:
- TO COVER OR TEST EVERYTHING
- TO ALWAYS HAVE EVERY TYPE OF TEST (UNIT/INTE/E2E)

Only two questions matter:
- is there an issue?
- if, do  tests show where?
- NOTHING ELSE. 

TESTS ALIGN WITH THE GOAL OF MAXIMIZING TIME SAVES:
- I don't have to know the exact nano-precise laser perfect spot of exactly where the issue is because if I know just in general that oAuth login doesn't return a user, I know all I need from tests already...the rest is direct research anyway

In short: use test-blockades to organize possibilities such that an issue can't avoid showing where it is

The less tests there are, the easier it is for them to do their job: save time by showing where the issue is.

