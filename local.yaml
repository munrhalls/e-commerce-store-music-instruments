version: "3.8"

services:
  admin:
    image: munrhalls/sang-logium-admin
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        - IMAGE_TAG
    ports:
      - "80:80"
    environment:
      - NODE_ENV=development
      - PORT=80
    volumes:
      - ./admin/admin/node_modules:/admin/node_modules
      - ./admin/admin:/admin/src
    depends_on:
      - server
    networks:
      - app-network
    restart: unless-stopped

  # frontend:
  #   image: munrhalls/sang-logium-storefront
  #   build:
  #     context: ./storefront
  #     dockerfile: Dockerfile
  #     args:
  #       - IMAGE_TAG
  #   ports:
  #     - "80:80"
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=80
  #   volumes:
  #     - ./storefront/storefront/node_modules:/storefront/node_modules
  #     - ./storefront/storefront:/storefront/src
  #   depends_on:
  #     - server
  #   networks:
  #     - app-network
  #   restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - IMAGE_TAG
    image: munrhalls/sang-logium-server
    volumes:
      - ./server/node_modules:/usr/src/server/node_modules
      # - ./server/src:/usr/src/server/src
      - ./server/src/graphql/generated.ts:/usr/src/server/src/graphql/generated.ts
    depends_on:
      - database
    networks:
      - app-network
    restart: unless-stopped
    environment:
      NODE_ENV: "development"
      MONGO_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@database:27017/${MONGO_INITDB_DATABASE}"

  database:
    restart: always
    build:
      context: ./database
      dockerfile: Dockerfile
      args:
        - IMAGE_TAG
    image: munrhalls/sang-logium-database
    volumes:
      - ./database/data/db:/data/db
    ports:
      - "27017-27017:27017-27017"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10m
      timeout: 10s
      retries: 3
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

networks:
  app-network:
    driver: bridge
