stages:
  - deploy

variables:
  CI_DEBUG_SERVICES: "true"

deploy:
  stage: deploy
  image: docker:25.0.3-dind-alpine3.19
  services:
    - docker:dind
  before_script:
    - git fetch --tags
    - apk add --no-cache openssh-client docker-compose
    - echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
    # - chmod +x /usr/local/bin/docker-compose
    - export IMAGE_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
    - echo $IMAGE_TAG

    - "eval $(ssh-agent -s)"
    - 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - "ssh -o StrictHostKeyChecking=no root@$DROPLET_IP"

    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-add -l

    - echo "$ssh_keyscan_result"
    - ssh-keyscan -vvv $DROPLET_IP >> ~/.ssh/known_hosts || echo "ssh-keyscan failed with exit code $?"
    - chmod 644 ~/.ssh/known_hosts

  script:
    - scp ./compose-prod.yaml root@$DROPLET_IP:/root/sang-logium/compose-prod.yaml
    - ssh root@$DROPLET_IP "sed -i 's/^IMAGE_TAG=.*/IMAGE_TAG=${IMAGE_TAG}/' /root/sang-logium/.env && cd /root/sang-logium && docker compose -f compose-prod.yaml down && docker rmi nginx frontend server database && docker compose -f compose-prod.yaml up -d"

  only:
    - main
