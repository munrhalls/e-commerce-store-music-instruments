stages:
  - build
  - dockerize
  - test

build_dist:
  stage: build
  image: node:20.10.0-alpine  # Ensure npm and ng are available
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node-modules
    paths:
      - frontend/node_modules/
      - /root/.npm/
  script:
    - if [ ! -f /usr/local/bin/ng ]; then npm install -g @angular/cli; fi # Cache Angular CLI
    - cd frontend
    - npm ci
    - ng test --watch=false --browsers=ChromeHeadlessCI
    - ng lint
    - ng build

  artifacts:
    paths:
      - frontend/dist/  # Frontend image simply copies Angular /dist folder

dockerize_frontend:
  stage: dockerize
  image: docker:24.0.7-dind
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose -f docker-compose.yaml build sang-logium-frontend
  only:
    - main

test_frontend:
  stage: test
  script:
    - cd frontend
    - npm ci
    - ng test  # Run Angular tests
    - ng lint  # Run Angular linting