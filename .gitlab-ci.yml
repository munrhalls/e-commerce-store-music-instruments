stages:
  - prepare
  - lint
  - test
  - build
  - dockerize

prepare:
  stage: prepare
  image: node:20.10.0-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node-modules
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - npm ci
  artifacts:
    paths:
      - frontend/node_modules/

lint_frontend:
  stage: lint
  image: node:20.10.0-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node-modules
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - npm run lint

unit_test_frontend:
  stage: test
  image: node:20.10.0-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node-modules
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - ng test --watch=false --browsers=ChromeHeadless

build_dist:
  stage: build
  image: node:20.10.0-alpine
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node-modules
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - ng build
  artifacts:
    paths:
      - frontend/dist/

dockerize_frontend:
  stage: dockerize
  image: docker:24.0.7-dind
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose -f docker-compose.yaml build sang-logium-frontend
  only:
    - main
